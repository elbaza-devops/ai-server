name: CI
run-name: CI workflow triggered by ${{ github.actor }}
on:
  push:
    branches: [ "main" ]

  workflow_dispatch:

permissions:
      id-token: write   # This is required for requesting the JWT
      contents: write    # This is required for actions/checkout
jobs:
  Prebuild:
    runs-on: arc-runner-set
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
    
      - name: Download Trivy HTML Template
        run: |
          mkdir -p contrib
          curl -sSL -o contrib/html.tpl https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/html.tpl

      - name: Run Trivy FS Scan
        uses: aquasecurity/trivy-action@0.30.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'template'
          template: "@/contrib/html.tpl"
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          scanners: "vuln,secret,misconfig,license"
          output: trivy-report-${{ github.run_id }}.html
          trivy-config: ${{ github.workspace }}/${{ github.repository }}/trivy-config.yaml

      - name: Upload Trivy FS Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report-${{ github.run_id }}
          path: trivy-report-${{ github.run_id }}.html


  Build:
    runs-on: arc-runner-set
    needs: Prebuild
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
    
      - name: Configure AWS credentials using OIDC
        uses: elbaza-devops/github-actions/aws/install-cli-action@main
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Create ECR Repositories
        uses: elbaza-devops/github-actions/aws/create-ecr-repo-action@main
        with:
            role-to-assume: ${{ secrets.AWS_OIDC_ROLE }}
            role-session-name: GitHub_to_AWS_via_FederatedOIDC_Run_ID_${{ github.run_id }}
            aws-region: us-east-1
            repo_names: '["ai-server"]'
            ecr_namespaces: '["dev"]'
            project_name: "healthcare"
            tags: '[{"Key": "Environment", "Value": "dev"}]'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/healthcare/dev/ai-server:${{ github.run_id }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: 'docker.io/my-organization/my-app:${{ github.sha }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          
  Postbuild:
    runs-on: arc-runner-set
    needs: Build
    steps:
      - uses: actions/checkout@v4
      
      - name: Run a one-line script
        run: echo Hello, world!